import "./App.css";
import { BrowserRouter as Router, Routes, Route, Link } from "react-router-dom";
import Home from "./compose/home.jsx";
import SetChicken from "./compose/setChicken.jsx";
import ChickenFry from "./compose/chicken_fry.jsx";
import AboutChicken from "./compose/aboutChicken.jsx";
import Contact from "./compose/contact.jsx";
import { useRef, useEffect, useState } from "react";

function BottomNav() {
  return (
    <nav className="bottom-nav chicken-theme-nav">
      <Link to="/home" className="nav-btn">
        <span role="img" aria-label="home">üè†</span>
        <span className="nav-label">‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</span>
      </Link>
      <Link to="/setChicken" className="nav-btn">
        <span role="img" aria-label="set">üçó</span>
        <span className="nav-label">‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏Å‡πà</span>
      </Link>
      <Link to="/chicken_fry" className="nav-btn">
        <span role="img" aria-label="fry">üç≥</span>
        <span className="nav-label">‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î</span>
      </Link>
      <Link to="/aboutChicken" className="nav-btn">
        <span role="img" aria-label="about">üêî</span>
        <span className="nav-label">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÑ‡∏Å‡πà</span>
      </Link>
      <Link to="/contact" className="nav-btn">
        <span role="img" aria-label="contact">üìû</span>
        <span className="nav-label">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</span>
      </Link>
    </nav>
  );
}

function App() {
  const navLinksRef = useRef(null);
  const [isOverflow, setIsOverflow] = useState(false);
  const [isMobileOrTablet, setIsMobileOrTablet] = useState(
    typeof window !== "undefined" ? window.innerWidth <= 1024 : false
  );

  useEffect(() => {
    function checkOverflow() {
      if (navLinksRef.current) {
        setIsOverflow(
          navLinksRef.current.scrollWidth > navLinksRef.current.clientWidth
        );
      }
    }
    function handleResize() {
      setIsMobileOrTablet(window.innerWidth <= 1024);
      checkOverflow();
    }
    checkOverflow();
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  const useBottomNav = isOverflow || isMobileOrTablet;

  return (
    <Router>
      <div className="app-container chicken-theme-bg">
        <header className="app-header chicken-theme-header">
          {/* ‡πÅ‡∏™‡∏î‡∏á Navbar ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ BottomNav */}
          {!useBottomNav && (
            <nav className="navbar hide-on-mobile">
              <div className="navbar-container">
                <div className="logo chicken-logo">
                  <span role="img" aria-label="logo">üçó</span> The Chicken Thief
                </div>
                <ul className="nav-links" ref={navLinksRef}>
                  <li><Link to="/home" className="nav-link">‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</Link></li>
                  <li><Link to="/setChicken" className="nav-link">‡πÄ‡∏ã‡πá‡∏ï‡πÑ‡∏Å‡πà</Link></li>
                  <li><Link to="/chicken_fry" className="nav-link">‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î</Link></li>
                  <li><Link to="/aboutChicken" className="nav-link">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÑ‡∏Å‡πà</Link></li>
                  <li><Link to="/contact" className="nav-link">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤</Link></li>
                </ul>
              </div>
            </nav>
          )}
          <div className="search search-top chicken-search">
            <input type="text" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏Å‡πà‡∏ó‡∏≠‡∏î..." />
            <span className="search-icon">üîç</span>
          </div>
        </header>

        <main className="app-main chicken-theme-main">
          <Routes>
            <Route path="/" element={<Home />} />
            <Route path="/home" element={<Home />} />
            <Route path="/setChicken" element={<SetChicken />} />
            <Route path="/chicken_fry" element={<ChickenFry />} />
            <Route path="/aboutChicken" element={<AboutChicken />} />
            <Route path="/contact" element={<Contact />} />
          </Routes>
        </main>

        {/* ‡πÅ‡∏™‡∏î‡∏á BottomNav ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ BottomNav */}
        {useBottomNav && <BottomNav />}
      </div>
    </Router>
  );
}
export default App;
